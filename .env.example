# ==============================================
# DESCRIBE IT - ENVIRONMENT CONFIGURATION
# ==============================================
# Copy this file to .env.local and fill in your values
# This is the MASTER template for all environment variables
# .env.local is gitignored for security

# ==============================================
# REQUIRED: CORE API KEYS
# ==============================================

# Supabase Configuration
# Get from: https://supabase.com/dashboard → Your Project → Settings → API
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Anthropic Claude Configuration (Primary AI Provider)
# Get from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
CLAUDE_MODEL=claude-sonnet-4-5-20250629
CLAUDE_MAX_TOKENS=8192
CLAUDE_TEMPERATURE=0.7

# Legacy OpenAI Configuration (Deprecated - migrated to Claude)
# OPENAI_API_KEY=sk-proj-your-openai-key-here
# OPENAI_MODEL=gpt-4o-mini

# Unsplash Configuration
# Get from: https://unsplash.com/developers
NEXT_PUBLIC_UNSPLASH_ACCESS_KEY=your-unsplash-access-key
UNSPLASH_ACCESS_KEY=your-unsplash-access-key

# ==============================================
# REQUIRED: SECURITY KEYS
# ==============================================
# Generate these with the commands below:

# API Security (32 bytes hex)
# Generate: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
API_SECRET_KEY=your-generated-32-byte-hex-key

# JWT Secret (32 bytes hex)
# Generate: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-generated-32-byte-hex-key

# Session Secret (16 bytes hex)
# Generate: node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
SESSION_SECRET=your-generated-16-byte-hex-key

# Valid API Keys for client access (comma-separated)
VALID_API_KEYS=dev-key1,dev-key2,dev-key3

# ==============================================
# APP CONFIGURATION
# ==============================================

# Application URL
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Environment (development/production/test)
NODE_ENV=development

# ==============================================
# SECURITY & CORS
# ==============================================

# Allowed Origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

# Content Security Policy domains
CSP_ALLOWED_DOMAINS=localhost,127.0.0.1

# Trusted proxy IPs (for rate limiting and security headers)
TRUSTED_PROXY_IPS=127.0.0.1,::1

# ==============================================
# DEBUG & MONITORING
# ==============================================

# Enable debug endpoint (set to false in production)
DEBUG_ENDPOINT_ENABLED=true

# Allowed IP addresses for debug access (comma-separated)
DEBUG_ALLOWED_IPS=127.0.0.1,192.168.1.100

# Error reporting level (error/warn/info/debug)
ERROR_REPORTING_LEVEL=info

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_WEB_VITALS=true

# ==============================================
# RATE LIMITING
# ==============================================

# Rate limit window in milliseconds (15 seconds default)
RATE_LIMIT_WINDOW_MS=15000

# Maximum requests per window
RATE_LIMIT_MAX_REQUESTS=100

# Rate limit for API endpoints
API_RATE_LIMIT_MAX_REQUESTS=50

# Rate limit for image searches
IMAGE_SEARCH_RATE_LIMIT=20

# ==============================================
# LOGGING CONFIGURATION
# ==============================================

# Log level: error, warn, info, debug
LOG_LEVEL=info

# Enable structured logging
ENABLE_STRUCTURED_LOGGING=false

# Log retention days
LOG_RETENTION_DAYS=7

# Enable audit logging
ENABLE_AUDIT_LOGGING=false

# ==============================================
# CACHING CONFIGURATION
# ==============================================

# Redis Configuration (optional)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password
REDIS_MAX_RETRIES=3

# Vercel KV Configuration (if using Vercel)
# Get from: https://vercel.com/dashboard/stores
KV_REST_API_URL=your-kv-rest-api-url
KV_REST_API_TOKEN=your-kv-rest-api-token

# Cache Settings
MAX_CACHE_SIZE=1000
DEFAULT_CACHE_TTL=3600
CACHE_WRITE_THROUGH=true
ENABLE_MEMORY_CACHE_FALLBACK=true
ENABLE_REDIS_CACHE=false
CACHE_TTL=300

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# PostgreSQL Configuration (if using direct connection)
DATABASE_URL=postgresql://username:password@localhost:5432/database_name
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_SSL=false
DATABASE_POOL_SIZE=10
DATABASE_TIMEOUT=30000

# ==============================================
# FEATURE FLAGS
# ==============================================

# Demo Mode (for testing without API keys)
ENABLE_DEMO_MODE=false
DEMO_MODE_AUTO=false

# Core Features
ENABLE_IMAGE_SEARCH=true
ENABLE_AI_TRANSLATION=true
ENABLE_SETTINGS_SYNC=true
ENABLE_ERROR_REPORTING=true
ENABLE_PERFORMANCE_METRICS=true
ENABLE_REAL_TIME=true
ENABLE_ANALYTICS=true
ENABLE_EXPORT=true

# Advanced features
ENABLE_A_B_TESTING=false
ENABLE_BETA_FEATURES=true
ENABLE_COLLABORATION=true
ENABLE_OFFLINE_MODE=false
ENABLE_PWA=true

# ==============================================
# MONITORING & OBSERVABILITY
# ==============================================

# Sentry Configuration (error monitoring)
# Get from: https://sentry.io
SENTRY_DSN=your-sentry-dsn
SENTRY_ENVIRONMENT=development
SENTRY_RELEASE=1.0.0
SENTRY_ORG=your-sentry-org
SENTRY_PROJECT=your-sentry-project
SENTRY_AUTH_TOKEN=your-sentry-auth-token

# Analytics
ANALYTICS_ID=your-analytics-id
NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX

# Alert Webhooks
ALERT_WEBHOOK_URL=your-alert-webhook-url
ALERT_EMAIL=admin@yourdomain.com

# Health check configuration
HEALTH_CHECK_TIMEOUT=5000
ENABLE_DEEP_HEALTH_CHECKS=false

# ==============================================
# DEPLOYMENT CONFIGURATION
# ==============================================

# Build optimization
ANALYZE=false
BUNDLE_ANALYZE=false

# Next.js Configuration
NEXT_TELEMETRY_DISABLED=1
NEXTJS_CACHE_SIZE=50

# Optimization flags
ENABLE_SOURCE_MAPS=true
ENABLE_MINIFICATION=false
ENABLE_TREE_SHAKING=true

# ==============================================
# SSL/TLS CONFIGURATION
# ==============================================

# Force HTTPS redirects (production only)
FORCE_HTTPS=false

# HSTS (HTTP Strict Transport Security)
ENABLE_HSTS=false
HSTS_MAX_AGE=31536000

# Security headers
ENABLE_SECURITY_HEADERS=true

# ==============================================
# BACKUP & RECOVERY
# ==============================================

# Backup configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7

# ==============================================
# TESTING & DEVELOPMENT
# ==============================================

# Test Configuration
ENABLE_TEST_MODE=false
TEST_API_DELAY=0

# Development API Key (for development debug access only)
DEV_API_KEY=dev-secret-key

# ==============================================
# OPTIONAL: THIRD-PARTY INTEGRATIONS
# ==============================================

# Vercel Blob Storage
# Get from: https://vercel.com/dashboard/stores
# BLOB_READ_WRITE_TOKEN=your-blob-token

# Flow Nexus (Optional)
# FLOW_NEXUS_EMAIL=your-email@example.com
# FLOW_NEXUS_PASSWORD=your-password

# ==============================================
# SETUP INSTRUCTIONS
# ==============================================
#
# 1. Copy this file: cp .env.example .env.local
# 2. Generate security keys using the commands above
# 3. Fill in your API keys from the respective services
# 4. Update NEXT_PUBLIC_APP_URL if deploying
# 5. Run: npm run dev
#
# ==============================================
# SECURITY NOTES
# ==============================================
#
# - Never commit .env.local to version control
# - Use different keys for development and production
# - Rotate API keys regularly
# - Monitor API usage for anomalies
# - The NEXT_PUBLIC_ prefix exposes variables to client-side
# - Only expose what's necessary on the client-side
#
# ==============================================
# PRODUCTION CHECKLIST
# ==============================================
#
# [ ] All API keys are set to production values
# [ ] API_SECRET_KEY is strong and unique
# [ ] JWT_SECRET is strong and unique
# [ ] ALLOWED_ORIGINS contains only production domains
# [ ] DEBUG_ENDPOINT_ENABLED is false
# [ ] LOG_LEVEL is set to 'warn' or 'error'
# [ ] Rate limiting is configured appropriately
# [ ] SSL/TLS certificates are valid
# [ ] Security headers are enabled
# [ ] Performance monitoring is active
# [ ] Backup strategy is in place
