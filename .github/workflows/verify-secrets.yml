name: Verify Secrets Configuration

on:
  workflow_dispatch:

jobs:
  verify-secrets:
    name: Verify GitHub Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Check Critical Secrets
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🔍 Verifying Critical Secrets (Required)"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""

          # VERCEL_TOKEN
          if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "✅ VERCEL_TOKEN configured"
          else
            echo "❌ VERCEL_TOKEN not configured"
            exit 1
          fi

          # NEXT_PUBLIC_SUPABASE_URL
          if [ -n "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "✅ NEXT_PUBLIC_SUPABASE_URL configured"
          else
            echo "❌ NEXT_PUBLIC_SUPABASE_URL not configured"
            exit 1
          fi

          # NEXT_PUBLIC_SUPABASE_ANON_KEY
          if [ -n "${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" ]; then
            echo "✅ NEXT_PUBLIC_SUPABASE_ANON_KEY configured"
          else
            echo "❌ NEXT_PUBLIC_SUPABASE_ANON_KEY not configured"
            exit 1
          fi

          # SUPABASE_SERVICE_ROLE_KEY
          if [ -n "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ]; then
            echo "✅ SUPABASE_SERVICE_ROLE_KEY configured"
          else
            echo "❌ SUPABASE_SERVICE_ROLE_KEY not configured"
            exit 1
          fi

      - name: Check Important Secrets
        run: |
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🔍 Verifying Important Secrets (Recommended)"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""

          # OPENAI_API_KEY
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "✅ OPENAI_API_KEY configured"
          else
            echo "⚠️  OPENAI_API_KEY not configured (AI features will be limited)"
          fi

          # API_SECRET_KEY
          if [ -n "${{ secrets.API_SECRET_KEY }}" ]; then
            echo "✅ API_SECRET_KEY configured"
          else
            echo "⚠️  API_SECRET_KEY not configured (generate with: node -e \"...\")"
          fi

          # JWT_SECRET
          if [ -n "${{ secrets.JWT_SECRET }}" ]; then
            echo "✅ JWT_SECRET configured"
          else
            echo "⚠️  JWT_SECRET not configured (required for authentication)"
          fi

          # SESSION_SECRET
          if [ -n "${{ secrets.SESSION_SECRET }}" ]; then
            echo "✅ SESSION_SECRET configured"
          else
            echo "⚠️  SESSION_SECRET not configured (required for sessions)"
          fi

      - name: Check Optional Secrets
        run: |
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🔍 Verifying Optional Secrets (Enhanced Features)"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""

          # CODECOV_TOKEN
          if [ -n "${{ secrets.CODECOV_TOKEN }}" ]; then
            echo "✅ CODECOV_TOKEN configured"
          else
            echo "ℹ️  CODECOV_TOKEN not configured (coverage reporting disabled)"
          fi

          # LHCI_GITHUB_APP_TOKEN
          if [ -n "${{ secrets.LHCI_GITHUB_APP_TOKEN }}" ]; then
            echo "✅ LHCI_GITHUB_APP_TOKEN configured"
          else
            echo "ℹ️  LHCI_GITHUB_APP_TOKEN not configured (Lighthouse CI in temp mode)"
          fi

          # NEXT_PUBLIC_UNSPLASH_ACCESS_KEY
          if [ -n "${{ secrets.NEXT_PUBLIC_UNSPLASH_ACCESS_KEY }}" ]; then
            echo "✅ NEXT_PUBLIC_UNSPLASH_ACCESS_KEY configured"
          else
            echo "ℹ️  NEXT_PUBLIC_UNSPLASH_ACCESS_KEY not configured (image search disabled)"
          fi

          # SENTRY_DSN
          if [ -n "${{ secrets.SENTRY_DSN }}" ]; then
            echo "✅ SENTRY_DSN configured"
          else
            echo "ℹ️  SENTRY_DSN not configured (error monitoring disabled)"
          fi

          # SENTRY_AUTH_TOKEN
          if [ -n "${{ secrets.SENTRY_AUTH_TOKEN }}" ]; then
            echo "✅ SENTRY_AUTH_TOKEN configured"
          else
            echo "ℹ️  SENTRY_AUTH_TOKEN not configured (source map upload disabled)"
          fi

          # GH_PAT
          if [ -n "${{ secrets.GH_PAT }}" ]; then
            echo "✅ GH_PAT configured"
          else
            echo "ℹ️  GH_PAT not configured (advanced GitHub features disabled)"
          fi

      - name: Secret Configuration Summary
        run: |
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📊 Configuration Summary"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "✅ All critical secrets are configured"
          echo ""
          echo "For missing secrets, see:"
          echo "  docs/devops/CICD_SETUP_GUIDE.md"
          echo "  docs/devops/secret-templates.md"
          echo ""
          echo "Generate security keys:"
          echo "  ./scripts/generate-secrets.sh"
          echo ""
          echo "Upload secrets to GitHub:"
          echo "  ./scripts/upload-secrets.sh .env.secrets.template"
          echo ""
