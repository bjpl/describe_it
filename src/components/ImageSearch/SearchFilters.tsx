import React from 'react';\nimport { motion } from 'framer-motion';\nimport * as RadioGroup from '@radix-ui/react-radio-group';\n\ninterface SearchFiltersProps {\n  filters: {\n    orientation: 'all' | 'landscape' | 'portrait' | 'squarish';\n    category: 'all' | 'nature' | 'people' | 'technology' | 'architecture';\n    color: 'all' | 'black_and_white' | 'black' | 'white' | 'yellow' | 'orange' | 'red' | 'purple' | 'magenta' | 'green' | 'teal' | 'blue';\n  };\n  onFiltersChange: (filters: any) => void;\n}\n\nexport function SearchFilters({ filters, onFiltersChange }: SearchFiltersProps) {\n  const handleFilterChange = (key: string, value: string) => {\n    onFiltersChange({\n      ...filters,\n      [key]: value\n    });\n  };\n\n  const orientationOptions = [\n    { value: 'all', label: 'All Orientations' },\n    { value: 'landscape', label: 'Landscape' },\n    { value: 'portrait', label: 'Portrait' },\n    { value: 'squarish', label: 'Square' }\n  ];\n\n  const categoryOptions = [\n    { value: 'all', label: 'All Categories' },\n    { value: 'nature', label: 'Nature' },\n    { value: 'people', label: 'People' },\n    { value: 'technology', label: 'Technology' },\n    { value: 'architecture', label: 'Architecture' }\n  ];\n\n  const colorOptions = [\n    { value: 'all', label: 'All Colors', color: 'linear-gradient(45deg, #ff0000, #00ff00, #0000ff)' },\n    { value: 'black_and_white', label: 'B&W', color: 'linear-gradient(45deg, #000000, #ffffff)' },\n    { value: 'black', label: 'Black', color: '#000000' },\n    { value: 'white', label: 'White', color: '#ffffff' },\n    { value: 'yellow', label: 'Yellow', color: '#ffff00' },\n    { value: 'orange', label: 'Orange', color: '#ffa500' },\n    { value: 'red', label: 'Red', color: '#ff0000' },\n    { value: 'purple', label: 'Purple', color: '#800080' },\n    { value: 'magenta', label: 'Magenta', color: '#ff00ff' },\n    { value: 'green', label: 'Green', color: '#008000' },\n    { value: 'teal', label: 'Teal', color: '#008080' },\n    { value: 'blue', label: 'Blue', color: '#0000ff' }\n  ];\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, height: 0 }}\n      animate={{ opacity: 1, height: 'auto' }}\n      exit={{ opacity: 0, height: 0 }}\n      className=\"bg-gray-50 rounded-xl p-6 space-y-6\"\n    >\n      {/* Orientation Filter */}\n      <div>\n        <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Orientation</h3>\n        <RadioGroup.Root\n          value={filters.orientation}\n          onValueChange={(value) => handleFilterChange('orientation', value)}\n          className=\"flex flex-wrap gap-2\"\n        >\n          {orientationOptions.map((option) => (\n            <div key={option.value} className=\"flex items-center\">\n              <RadioGroup.Item\n                value={option.value}\n                id={`orientation-${option.value}`}\n                className=\"sr-only\"\n              />\n              <label\n                htmlFor={`orientation-${option.value}`}\n                className={`px-3 py-2 rounded-lg text-sm cursor-pointer transition-all ${\n                  filters.orientation === option.value\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-200'\n                }`}\n              >\n                {option.label}\n              </label>\n            </div>\n          ))}\n        </RadioGroup.Root>\n      </div>\n\n      {/* Category Filter */}\n      <div>\n        <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Category</h3>\n        <RadioGroup.Root\n          value={filters.category}\n          onValueChange={(value) => handleFilterChange('category', value)}\n          className=\"flex flex-wrap gap-2\"\n        >\n          {categoryOptions.map((option) => (\n            <div key={option.value} className=\"flex items-center\">\n              <RadioGroup.Item\n                value={option.value}\n                id={`category-${option.value}`}\n                className=\"sr-only\"\n              />\n              <label\n                htmlFor={`category-${option.value}`}\n                className={`px-3 py-2 rounded-lg text-sm cursor-pointer transition-all ${\n                  filters.category === option.value\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-200'\n                }`}\n              >\n                {option.label}\n              </label>\n            </div>\n          ))}\n        </RadioGroup.Root>\n      </div>\n\n      {/* Color Filter */}\n      <div>\n        <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Color</h3>\n        <RadioGroup.Root\n          value={filters.color}\n          onValueChange={(value) => handleFilterChange('color', value)}\n          className=\"flex flex-wrap gap-2\"\n        >\n          {colorOptions.map((option) => (\n            <div key={option.value} className=\"flex items-center\">\n              <RadioGroup.Item\n                value={option.value}\n                id={`color-${option.value}`}\n                className=\"sr-only\"\n              />\n              <label\n                htmlFor={`color-${option.value}`}\n                className={`flex items-center gap-2 px-3 py-2 rounded-lg text-sm cursor-pointer transition-all ${\n                  filters.color === option.value\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-200'\n                }`}\n              >\n                <div\n                  className=\"w-4 h-4 rounded-full border border-gray-300\"\n                  style={{ \n                    background: option.color,\n                    border: option.value === 'white' ? '1px solid #ccc' : 'none'\n                  }}\n                />\n                {option.label}\n              </label>\n            </div>\n          ))}\n        </RadioGroup.Root>\n      </div>\n\n      {/* Clear Filters */}\n      <div className=\"flex justify-end pt-4 border-t border-gray-200\">\n        <motion.button\n          onClick={() => onFiltersChange({\n            orientation: 'all',\n            category: 'all',\n            color: 'all'\n          })}\n          className=\"px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          Clear All Filters\n        </motion.button>\n      </div>\n    </motion.div>\n  );\n}"}