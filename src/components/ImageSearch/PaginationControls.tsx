import React from 'react';\nimport { motion } from 'framer-motion';\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from 'lucide-react';\n\ninterface PaginationControlsProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n  onLoadMore?: () => void;\n  hasNextPage: boolean;\n  loading: boolean;\n  showLoadMore?: boolean;\n}\n\nexport function PaginationControls({\n  currentPage,\n  totalPages,\n  onPageChange,\n  onLoadMore,\n  hasNextPage,\n  loading,\n  showLoadMore = true\n}: PaginationControlsProps) {\n  // Generate visible page numbers\n  const generatePageNumbers = () => {\n    const pages: (number | string)[] = [];\n    const maxVisible = 5;\n    \n    if (totalPages <= maxVisible) {\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      if (currentPage <= 3) {\n        pages.push(1, 2, 3, 4, '...', totalPages);\n      } else if (currentPage >= totalPages - 2) {\n        pages.push(1, '...', totalPages - 3, totalPages - 2, totalPages - 1, totalPages);\n      } else {\n        pages.push(1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages);\n      }\n    }\n    \n    return pages;\n  };\n\n  const pageNumbers = generatePageNumbers();\n\n  const buttonVariants = {\n    hover: { scale: 1.05 },\n    tap: { scale: 0.95 }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      {/* Load More Button */}\n      {showLoadMore && hasNextPage && (\n        <motion.button\n          onClick={onLoadMore}\n          disabled={loading}\n          className=\"px-6 py-3 bg-primary-600 hover:bg-primary-700 disabled:bg-gray-400 text-white rounded-xl font-medium transition-colors flex items-center gap-2\"\n          variants={buttonVariants}\n          whileHover=\"hover\"\n          whileTap=\"tap\"\n        >\n          {loading ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              Loading...\n            </>\n          ) : (\n            <>\n              Load More Images\n              <ChevronRight className=\"h-4 w-4\" />\n            </>\n          )}\n        </motion.button>\n      )}\n\n      {/* Page Navigation */}\n      <div className=\"flex items-center space-x-2\">\n        {/* Previous Button */}\n        <motion.button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1 || loading}\n          className=\"p-2 rounded-lg border border-gray-300 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          variants={buttonVariants}\n          whileHover=\"hover\"\n          whileTap=\"tap\"\n        >\n          <ChevronLeft className=\"h-4 w-4\" />\n        </motion.button>\n\n        {/* Page Numbers */}\n        <div className=\"flex items-center space-x-1\">\n          {pageNumbers.map((page, index) => (\n            <React.Fragment key={index}>\n              {page === '...' ? (\n                <div className=\"px-3 py-2 text-gray-400\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </div>\n              ) : (\n                <motion.button\n                  onClick={() => onPageChange(page as number)}\n                  disabled={loading}\n                  className={`px-3 py-2 rounded-lg font-medium transition-colors ${\n                    currentPage === page\n                      ? 'bg-primary-600 text-white'\n                      : 'text-gray-700 hover:bg-gray-100 disabled:opacity-50'\n                  }`}\n                  variants={buttonVariants}\n                  whileHover=\"hover\"\n                  whileTap=\"tap\"\n                >\n                  {page}\n                </motion.button>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n\n        {/* Next Button */}\n        <motion.button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages || loading}\n          className=\"p-2 rounded-lg border border-gray-300 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          variants={buttonVariants}\n          whileHover=\"hover\"\n          whileTap=\"tap\"\n        >\n          <ChevronRight className=\"h-4 w-4\" />\n        </motion.button>\n      </div>\n\n      {/* Page Info */}\n      <div className=\"text-sm text-gray-600\">\n        Page {currentPage} of {totalPages}\n      </div>\n    </div>\n  );\n}"}