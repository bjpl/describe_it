import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Heart, Download, User, Calendar } from 'lucide-react';\nimport { UnsplashImage } from '@/types';\n\ninterface ImageGridProps {\n  images: UnsplashImage[];\n  onImageClick: (image: UnsplashImage) => void;\n  loading?: boolean;\n}\n\nexport function ImageGrid({ images, onImageClick, loading = false }: ImageGridProps) {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { \n      opacity: 0, \n      scale: 0.8,\n      y: 20\n    },\n    visible: { \n      opacity: 1, \n      scale: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\"\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        {Array.from({ length: 8 }).map((_, index) => (\n          <div\n            key={index}\n            className=\"aspect-square bg-gray-200 rounded-xl animate-pulse\"\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n    >\n      {images.map((image) => (\n        <motion.div\n          key={image.id}\n          variants={itemVariants}\n          className=\"group relative aspect-square overflow-hidden rounded-xl cursor-pointer bg-gray-100\"\n          whileHover={{ \n            scale: 1.02,\n            transition: { duration: 0.2 }\n          }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() => onImageClick(image)}\n        >\n          <img\n            src={image.urls.small}\n            alt={image.alt_description || image.description || 'Unsplash image'}\n            className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n            loading=\"lazy\"\n          />\n          \n          {/* Overlay */}\n          <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300\" />\n          \n          {/* Hover Content */}\n          <div className=\"absolute inset-0 p-3 flex flex-col justify-between opacity-0 group-hover:opacity-100 transition-all duration-300\">\n            {/* Top Section - Image Info */}\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-center gap-1 bg-black bg-opacity-50 rounded-full px-2 py-1 text-white text-xs\">\n                <Heart className=\"h-3 w-3\" />\n                <span>{image.likes}</span>\n              </div>\n              \n              <div className=\"flex items-center gap-1 bg-black bg-opacity-50 rounded-full px-2 py-1\">\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    // Handle download\n                    const link = document.createElement('a');\n                    link.href = image.urls.regular;\n                    link.download = `unsplash-${image.id}.jpg`;\n                    link.click();\n                  }}\n                  className=\"text-white hover:text-gray-200 transition-colors\"\n                >\n                  <Download className=\"h-3 w-3\" />\n                </button>\n              </div>\n            </div>\n            \n            {/* Bottom Section - User Info */}\n            <div className=\"space-y-2\">\n              {/* Description */}\n              {(image.description || image.alt_description) && (\n                <p className=\"text-white text-xs bg-black bg-opacity-50 rounded-lg px-2 py-1 line-clamp-2\">\n                  {image.description || image.alt_description}\n                </p>\n              )}\n              \n              {/* User Info */}\n              <div className=\"flex items-center gap-2 bg-black bg-opacity-50 rounded-lg px-2 py-1\">\n                <User className=\"h-3 w-3 text-white\" />\n                <span className=\"text-white text-xs font-medium truncate\">\n                  {image.user.name}\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Quick Preview Button */}\n          <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300\">\n            <motion.button\n              onClick={(e) => {\n                e.stopPropagation();\n                onImageClick(image);\n              }}\n              className=\"bg-white bg-opacity-90 hover:bg-opacity-100 text-gray-800 px-4 py-2 rounded-full font-medium transition-all duration-200 shadow-lg\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              View Image\n            </motion.button>\n          </div>\n          \n          {/* Image Dimensions Indicator */}\n          <div className=\"absolute top-3 left-3 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300\">\n            {image.width} Ã— {image.height}\n          </div>\n          \n          {/* Creation Date */}\n          <div className=\"absolute bottom-3 right-3 flex items-center gap-1 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300\">\n            <Calendar className=\"h-3 w-3\" />\n            <span>{new Date(image.created_at).toLocaleDateString()}</span>\n          </div>\n        </motion.div>\n      ))}\n    </motion.div>\n  );\n}"}